From b181da83a6db73505e34f0b8b00324edac7b3815 Mon Sep 17 00:00:00 2001
From: ricolin <rlin@vexxhost.com>
Date: Mon, 24 Mar 2025 15:43:56 +0800
Subject: [PATCH 2/9] Add octavia_client with openstacksdk

This patch adds octavia client to allow get content
from Octavia DB through octavia client based on
openstacksdk

Related-Bug: #2045415

Co-authored-by: Fernando Royo <froyo@redhat.com>
Co-authored-by: Rico Lin <ricolin@ricolky.com>
Change-Id: I208e77a4e06645f187a2804c165d5df6b5a54704
---
 ovn_octavia_provider/common/clients.py | 24 ++++++++++++++++++++++++
 ovn_octavia_provider/driver.py         |  5 +++++
 ovn_octavia_provider/helper.py         | 11 +++++++++++
 3 files changed, 40 insertions(+)

diff --git a/ovn_octavia_provider/common/clients.py b/ovn_octavia_provider/common/clients.py
index 836a3b8..d71101a 100644
--- a/ovn_octavia_provider/common/clients.py
+++ b/ovn_octavia_provider/common/clients.py
@@ -15,6 +15,7 @@ from neutronclient.common import exceptions as n_exc
 from neutronclient.neutron import client as neutron_client
 
 from octavia_lib.api.drivers import exceptions as driver_exceptions
+import openstack
 from oslo_config import cfg
 from oslo_log import log as logging
 from oslo_utils import excutils
@@ -117,3 +118,26 @@ def get_neutron_client():
                 'in Octavia API configuration.') % e
         raise driver_exceptions.DriverError(
             operator_fault_string=msg)
+
+class OctaviaAuth(metaclass=Singleton):
+    def __init__(self):
+        """Create Octavia client object."""
+        try:
+            ksession = KeystoneSession()
+
+            self.lbaas_proxy = openstack.connection.Connection(
+                session=ksession.session).load_balancer
+        except Exception:
+            with excutils.save_and_reraise_exception():
+                LOG.exception("Error creating Octavia client.")
+
+
+def get_octavia_client():
+    try:
+        return OctaviaAuth().lbaas_proxy
+    except Exception as e:
+        msg = _('Cannot initialize OpenStackSDK. Exception: %s. '
+                'Please verify service_auth configuration '
+                'in Octavia API configuration.') % e
+        raise driver_exceptions.DriverError(
+            operator_fault_string=msg)
diff --git a/ovn_octavia_provider/driver.py b/ovn_octavia_provider/driver.py
index ae225b6..fd2083e 100644
--- a/ovn_octavia_provider/driver.py
+++ b/ovn_octavia_provider/driver.py
@@ -21,6 +21,7 @@ from octavia_lib.api.drivers import provider_base as driver_base
 from octavia_lib.common import constants
 from oslo_log import log as logging
 
+from ovn_octavia_provider.common import clients
 from ovn_octavia_provider.common import config as ovn_conf
 # TODO(mjozefcz): Start consuming const and utils
 # from neutron-lib once released.
@@ -538,3 +539,7 @@ class OvnProviderDriver(driver_base.ProviderDriver):
         LOG.info(f"Starting sync OVN DB with Loadbalancer filter {lb_filters}")
         # TODO(froyo): get LBs from Octavia DB through openstack sdk client and
         # call to helper methods to sync
+        octavia_client = clients.get_octavia_client()
+        lbs = self._ovn_helper.get_octavia_lbs(octavia_client, **lb_filters)
+        for lb in lbs:
+            LOG.info(f"Starting sync OVN DB with Loadbalancer {lb.id}")
diff --git a/ovn_octavia_provider/helper.py b/ovn_octavia_provider/helper.py
index 0a8d7a7..f9453e4 100644
--- a/ovn_octavia_provider/helper.py
+++ b/ovn_octavia_provider/helper.py
@@ -26,6 +26,7 @@ from octavia_lib.api.drivers import data_models as o_datamodels
 from octavia_lib.api.drivers import driver_lib as o_driver_lib
 from octavia_lib.api.drivers import exceptions as driver_exceptions
 from octavia_lib.common import constants
+import openstack
 from oslo_config import cfg
 from oslo_log import log as logging
 from oslo_serialization import jsonutils
@@ -430,6 +431,16 @@ class OvnProviderHelper():
     def _neutron_list_ports(self, neutron_client, **params):
         return neutron_client.list_ports(**params)
 
+
+    @tenacity.retry(
+        retry=tenacity.retry_if_exception_type(
+            openstack.exceptions.HttpException),
+        wait=tenacity.wait_exponential(),
+        stop=tenacity.stop_after_delay(10),
+        reraise=True)
+    def get_octavia_lbs(self, octavia_client, **params):
+        return octavia_client.load_balancers(**params)
+
     def _find_ovn_lbs(self, lb_id, protocol=None):
         """Find the Loadbalancers in OVN with the given lb_id as its name
 
-- 
2.25.1

